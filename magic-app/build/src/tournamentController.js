var Magic;
(function (Magic) {
    var App;
    (function (App) {
        var Tournament;
        (function (Tournament) {
            var TournamentController = (function () {
                function TournamentController($scope, $http, $state) {
                    this.tournamentModel = {
                        format: "Draft",
                        numRounds: null,
                        players: [],
                        set: null
                    };
                    this.http = $http;
                    this.state = $state;
                }
                TournamentController.prototype.startTournament = function () {
                    var _this = this;
                    var playerNames = _.pluck(this.tournamentModel.players, "name");
                    console.log(this.tournamentModel.players);
                    console.log("rounds: " + this.tournamentModel.numRounds);
                    this.http.post("api/tournament/register", {
                        "players": playerNames,
                        "format": this.tournamentModel.format,
                        "code": this.tournamentModel.set,
                    }, {
                        "params": {
                            "rounds": this.tournamentModel.numRounds,
                        },
                    }).then(function (createTournamentResponse) {
                        var tournamentId = createTournamentResponse.data;
                        console.log(tournamentId);
                        _this.state.go("instance", { id: encodeURI(tournamentId) });
                    });
                };
                TournamentController.$inject = ["$scope", "$http", "$state"];
                return TournamentController;
            })();
            Tournament.TournamentController = TournamentController;
            App.magic.controller("tournamentController", TournamentController);
        })(Tournament = App.Tournament || (App.Tournament = {}));
    })(App = Magic.App || (Magic.App = {}));
})(Magic || (Magic = {}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvdXJuYW1lbnRDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbIk1hZ2ljIiwiTWFnaWMuQXBwIiwiTWFnaWMuQXBwLlRvdXJuYW1lbnQiLCJNYWdpYy5BcHAuVG91cm5hbWVudC5Ub3VybmFtZW50Q29udHJvbGxlciIsIk1hZ2ljLkFwcC5Ub3VybmFtZW50LlRvdXJuYW1lbnRDb250cm9sbGVyLmNvbnN0cnVjdG9yIiwiTWFnaWMuQXBwLlRvdXJuYW1lbnQuVG91cm5hbWVudENvbnRyb2xsZXIuc3RhcnRUb3VybmFtZW50Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFPLEtBQUssQ0EyQ1g7QUEzQ0QsV0FBTyxLQUFLO0lBQUNBLElBQUFBLEdBQUdBLENBMkNmQTtJQTNDWUEsV0FBQUEsR0FBR0E7UUFBQ0MsSUFBQUEsVUFBVUEsQ0EyQzFCQTtRQTNDZ0JBLFdBQUFBLFVBQVVBLEVBQUNBLENBQUNBO1lBRXpCQztnQkFNSUMsOEJBQVlBLE1BQWlCQSxFQUFFQSxLQUFzQkEsRUFBRUEsTUFBMkJBO29CQUM5RUMsSUFBSUEsQ0FBQ0EsZUFBZUEsR0FBR0E7d0JBQ25CQSxNQUFNQSxFQUFFQSxPQUFPQTt3QkFDZkEsU0FBU0EsRUFBRUEsSUFBSUE7d0JBQ2ZBLE9BQU9BLEVBQUVBLEVBQUVBO3dCQUNYQSxHQUFHQSxFQUFFQSxJQUFJQTtxQkFDWkEsQ0FBQ0E7b0JBQ0ZBLElBQUlBLENBQUNBLElBQUlBLEdBQUdBLEtBQUtBLENBQUNBO29CQUNsQkEsSUFBSUEsQ0FBQ0EsS0FBS0EsR0FBR0EsTUFBTUEsQ0FBQ0E7Z0JBQ3hCQSxDQUFDQTtnQkFFTUQsOENBQWVBLEdBQXRCQTtvQkFBQUUsaUJBb0JDQTtvQkFuQkdBLElBQUlBLFdBQVdBLEdBQUdBLENBQUNBLENBQUNBLEtBQUtBLENBQUNBLElBQUlBLENBQUNBLGVBQWVBLENBQUNBLE9BQU9BLEVBQUVBLE1BQU1BLENBQUNBLENBQUNBO29CQUNoRUEsT0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0E7b0JBQzFDQSxPQUFPQSxDQUFDQSxHQUFHQSxDQUFDQSxVQUFVQSxHQUFHQSxJQUFJQSxDQUFDQSxlQUFlQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQTtvQkFDekRBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLElBQUlBLENBQU1BLHlCQUF5QkEsRUFDN0NBO3dCQUNJQSxTQUFTQSxFQUFFQSxXQUFXQTt3QkFDdEJBLFFBQVFBLEVBQUVBLElBQUlBLENBQUNBLGVBQWVBLENBQUNBLE1BQU1BO3dCQUNyQ0EsTUFBTUEsRUFBRUEsSUFBSUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsR0FBR0E7cUJBQ25DQSxFQUNEQTt3QkFDSUEsUUFBUUEsRUFBQ0E7NEJBQ0xBLFFBQVFBLEVBQUVBLElBQUlBLENBQUNBLGVBQWVBLENBQUNBLFNBQVNBO3lCQUMzQ0E7cUJBQ0pBLENBQ0FBLENBQUNBLElBQUlBLENBQUNBLFVBQUNBLHdCQUF3QkE7d0JBQzVCQSxJQUFJQSxZQUFZQSxHQUFHQSx3QkFBd0JBLENBQUNBLElBQUlBLENBQUNBO3dCQUNqREEsT0FBT0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsWUFBWUEsQ0FBQ0EsQ0FBQ0E7d0JBQzFCQSxLQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxFQUFFQSxDQUFDQSxVQUFVQSxFQUFFQSxFQUFDQSxFQUFFQSxFQUFFQSxTQUFTQSxDQUFDQSxZQUFZQSxDQUFDQSxFQUFDQSxDQUFDQSxDQUFDQTtvQkFDN0RBLENBQUNBLENBQUNBLENBQUNBO2dCQUNQQSxDQUFDQTtnQkFuQ2FGLDRCQUFPQSxHQUFHQSxDQUFDQSxRQUFRQSxFQUFFQSxPQUFPQSxFQUFFQSxRQUFRQSxDQUFDQSxDQUFDQTtnQkFvQzFEQSwyQkFBQ0E7WUFBREEsQ0F0Q0FELEFBc0NDQyxJQUFBRDtZQXRDWUEsK0JBQW9CQSx1QkFzQ2hDQSxDQUFBQTtZQUVEQSxTQUFLQSxDQUFDQSxVQUFVQSxDQUFDQSxzQkFBc0JBLEVBQUVBLG9CQUFvQkEsQ0FBQ0EsQ0FBQ0E7UUFDbkVBLENBQUNBLEVBM0NnQkQsVUFBVUEsR0FBVkEsY0FBVUEsS0FBVkEsY0FBVUEsUUEyQzFCQTtJQUFEQSxDQUFDQSxFQTNDWUQsR0FBR0EsR0FBSEEsU0FBR0EsS0FBSEEsU0FBR0EsUUEyQ2ZBO0FBQURBLENBQUNBLEVBM0NNLEtBQUssS0FBTCxLQUFLLFFBMkNYIiwiZmlsZSI6InRvdXJuYW1lbnRDb250cm9sbGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlIE1hZ2ljLkFwcC5Ub3VybmFtZW50IHtcblxuICAgIGV4cG9ydCBjbGFzcyBUb3VybmFtZW50Q29udHJvbGxlciB7XG5cbiAgICAgICAgcHVibGljIHN0YXRpYyAkaW5qZWN0ID0gW1wiJHNjb3BlXCIsIFwiJGh0dHBcIiwgXCIkc3RhdGVcIl07XG4gICAgICAgIHB1YmxpYyB0b3VybmFtZW50TW9kZWw6IE1hZ2ljLkFwcC5EcmFmdENvbmZpZy5JVG91cm5hbWVudE1vZGVsO1xuICAgICAgICBwdWJsaWMgc3RhdGU6IG5nLnVpLklTdGF0ZVNlcnZpY2U7XG4gICAgICAgIHByaXZhdGUgaHR0cDogbmcuSUh0dHBTZXJ2aWNlO1xuICAgICAgICBjb25zdHJ1Y3Rvcigkc2NvcGU6IG5nLklTY29wZSwgJGh0dHA6IG5nLklIdHRwU2VydmljZSwgJHN0YXRlOiBuZy51aS5JU3RhdGVTZXJ2aWNlKSB7XG4gICAgICAgICAgICB0aGlzLnRvdXJuYW1lbnRNb2RlbCA9IHtcbiAgICAgICAgICAgICAgICBmb3JtYXQ6IFwiRHJhZnRcIixcbiAgICAgICAgICAgICAgICBudW1Sb3VuZHM6IG51bGwsXG4gICAgICAgICAgICAgICAgcGxheWVyczogW10sXG4gICAgICAgICAgICAgICAgc2V0OiBudWxsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5odHRwID0gJGh0dHA7XG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gJHN0YXRlO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBwdWJsaWMgc3RhcnRUb3VybmFtZW50KCkge1xuICAgICAgICAgICAgdmFyIHBsYXllck5hbWVzID0gXy5wbHVjayh0aGlzLnRvdXJuYW1lbnRNb2RlbC5wbGF5ZXJzLCBcIm5hbWVcIik7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnRvdXJuYW1lbnRNb2RlbC5wbGF5ZXJzKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwicm91bmRzOiBcIiArIHRoaXMudG91cm5hbWVudE1vZGVsLm51bVJvdW5kcyk7XG4gICAgICAgICAgICB0aGlzLmh0dHAucG9zdDxhbnk+KFwiYXBpL3RvdXJuYW1lbnQvcmVnaXN0ZXJcIixcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBcInBsYXllcnNcIjogcGxheWVyTmFtZXMsXG4gICAgICAgICAgICAgICAgXCJmb3JtYXRcIjogdGhpcy50b3VybmFtZW50TW9kZWwuZm9ybWF0LFxuICAgICAgICAgICAgICAgIFwiY29kZVwiOiB0aGlzLnRvdXJuYW1lbnRNb2RlbC5zZXQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFwicGFyYW1zXCI6e1xuICAgICAgICAgICAgICAgICAgICBcInJvdW5kc1wiOiB0aGlzLnRvdXJuYW1lbnRNb2RlbC5udW1Sb3VuZHMsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICkudGhlbigoY3JlYXRlVG91cm5hbWVudFJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIHRvdXJuYW1lbnRJZCA9IGNyZWF0ZVRvdXJuYW1lbnRSZXNwb25zZS5kYXRhO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRvdXJuYW1lbnRJZCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5nbyhcImluc3RhbmNlXCIsIHtpZDogZW5jb2RlVVJJKHRvdXJuYW1lbnRJZCl9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbWFnaWMuY29udHJvbGxlcihcInRvdXJuYW1lbnRDb250cm9sbGVyXCIsIFRvdXJuYW1lbnRDb250cm9sbGVyKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==