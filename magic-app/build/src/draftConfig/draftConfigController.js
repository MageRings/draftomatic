var Magic;
(function (Magic) {
    var App;
    (function (App) {
        var DraftConfig;
        (function (DraftConfig) {
            var DraftConfigController = (function () {
                function DraftConfigController($scope, $http) {
                    $http.get("api/player/list").then(function (response) { return console.log(response); });
                    this.$scope = $scope;
                    this.$scope.draftConfigController = this;
                    this.sets = [
                        {
                            name: "Magic: Origins",
                            value: "ori"
                        },
                        {
                            name: "Dragons of Tarkir",
                            value: "dtk"
                        },
                        {
                            name: "Battle for Zendikar",
                            value: "bfz"
                        },
                        {
                            name: "Modern Masters 2015",
                            value: "mmb"
                        }
                    ];
                    this.formats = ["LIMITED_DRAFT", "LIMITED_TEAM_DRAFT", "LIMITED_SEALED",
                        "LIMITED_TEAM_SEALED", "CONSTRUCTED_CASUAL", "CONSTRUCTED_STANDARD", "CONSTRUCTED_MODERN",
                        "CONSTRUCTED_LEGACY", "CONSTRUCTED_VINTAGE"];
                    this.currentId = 1;
                }
                DraftConfigController.prototype.addPendingPlayer = function () {
                    if (this.pendingPlayerName.trim().length > 0) {
                        var newPlayer = { name: this.pendingPlayerName, id: this.currentId };
                        this.currentId += 1;
                        this.$scope.tournamentModel.players.push(newPlayer);
                        this.pendingPlayerName = "";
                    }
                    ;
                };
                DraftConfigController.prototype.removePlayer = function (player) {
                    _.remove(this.$scope.tournamentModel.players, player);
                };
                DraftConfigController.$inject = ["$scope", "$http"];
                return DraftConfigController;
            })();
            DraftConfig.DraftConfigController = DraftConfigController;
            App.magic.controller("draftConfigController", DraftConfigController);
        })(DraftConfig = App.DraftConfig || (App.DraftConfig = {}));
    })(App = Magic.App || (Magic.App = {}));
})(Magic || (Magic = {}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyYWZ0Q29uZmlnL2RyYWZ0Q29uZmlnQ29udHJvbGxlci50cyJdLCJuYW1lcyI6WyJNYWdpYyIsIk1hZ2ljLkFwcCIsIk1hZ2ljLkFwcC5EcmFmdENvbmZpZyIsIk1hZ2ljLkFwcC5EcmFmdENvbmZpZy5EcmFmdENvbmZpZ0NvbnRyb2xsZXIiLCJNYWdpYy5BcHAuRHJhZnRDb25maWcuRHJhZnRDb25maWdDb250cm9sbGVyLmNvbnN0cnVjdG9yIiwiTWFnaWMuQXBwLkRyYWZ0Q29uZmlnLkRyYWZ0Q29uZmlnQ29udHJvbGxlci5hZGRQZW5kaW5nUGxheWVyIiwiTWFnaWMuQXBwLkRyYWZ0Q29uZmlnLkRyYWZ0Q29uZmlnQ29udHJvbGxlci5yZW1vdmVQbGF5ZXIiXSwibWFwcGluZ3MiOiJBQUFBLElBQU8sS0FBSyxDQTZFWDtBQTdFRCxXQUFPLEtBQUs7SUFBQ0EsSUFBQUEsR0FBR0EsQ0E2RWZBO0lBN0VZQSxXQUFBQSxHQUFHQTtRQUFDQyxJQUFBQSxXQUFXQSxDQTZFM0JBO1FBN0VnQkEsV0FBQUEsV0FBV0EsRUFBQ0EsQ0FBQ0E7WUEyQjFCQztnQkFPSUMsK0JBQVlBLE1BQXlCQSxFQUFFQSxLQUFzQkE7b0JBQ3pEQyxLQUFLQSxDQUFDQSxHQUFHQSxDQUFNQSxpQkFBaUJBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLFVBQUNBLFFBQVFBLElBQUtBLE9BQUFBLE9BQU9BLENBQUNBLEdBQUdBLENBQUNBLFFBQVFBLENBQUNBLEVBQXJCQSxDQUFxQkEsQ0FBQ0EsQ0FBQ0E7b0JBQzVFQSxJQUFJQSxDQUFDQSxNQUFNQSxHQUFHQSxNQUFNQSxDQUFDQTtvQkFDckJBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLHFCQUFxQkEsR0FBR0EsSUFBSUEsQ0FBQ0E7b0JBQ3pDQSxJQUFJQSxDQUFDQSxJQUFJQSxHQUFHQTt3QkFDUkE7NEJBQ0lBLElBQUlBLEVBQUVBLGdCQUFnQkE7NEJBQ3RCQSxLQUFLQSxFQUFFQSxLQUFLQTt5QkFDZkE7d0JBQ0RBOzRCQUNJQSxJQUFJQSxFQUFFQSxtQkFBbUJBOzRCQUN6QkEsS0FBS0EsRUFBRUEsS0FBS0E7eUJBQ2ZBO3dCQUNEQTs0QkFDSUEsSUFBSUEsRUFBRUEscUJBQXFCQTs0QkFDM0JBLEtBQUtBLEVBQUVBLEtBQUtBO3lCQUNmQTt3QkFDREE7NEJBQ0lBLElBQUlBLEVBQUVBLHFCQUFxQkE7NEJBQzNCQSxLQUFLQSxFQUFFQSxLQUFLQTt5QkFDZkE7cUJBQ0pBLENBQUNBO29CQUNGQSxJQUFJQSxDQUFDQSxPQUFPQSxHQUFHQSxDQUFDQSxlQUFlQSxFQUFFQSxvQkFBb0JBLEVBQUVBLGdCQUFnQkE7d0JBQ3ZFQSxxQkFBcUJBLEVBQUVBLG9CQUFvQkEsRUFBRUEsc0JBQXNCQSxFQUFFQSxvQkFBb0JBO3dCQUN6RkEsb0JBQW9CQSxFQUFFQSxxQkFBcUJBLENBQUNBLENBQUFBO29CQUM1Q0EsSUFBSUEsQ0FBQ0EsU0FBU0EsR0FBR0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ3ZCQSxDQUFDQTtnQkFFTUQsZ0RBQWdCQSxHQUF2QkE7b0JBQ0lFLEVBQUVBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLGlCQUFpQkEsQ0FBQ0EsSUFBSUEsRUFBRUEsQ0FBQ0EsTUFBTUEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7d0JBQzNDQSxJQUFJQSxTQUFTQSxHQUFHQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxDQUFDQSxpQkFBaUJBLEVBQUVBLEVBQUVBLEVBQUVBLElBQUlBLENBQUNBLFNBQVNBLEVBQUVBLENBQUNBO3dCQUNyRUEsSUFBSUEsQ0FBQ0EsU0FBU0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7d0JBQ3BCQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxlQUFlQSxDQUFDQSxPQUFPQSxDQUFDQSxJQUFJQSxDQUFDQSxTQUFTQSxDQUFDQSxDQUFDQTt3QkFDcERBLElBQUlBLENBQUNBLGlCQUFpQkEsR0FBR0EsRUFBRUEsQ0FBQ0E7b0JBQ2hDQSxDQUFDQTtvQkFBQUEsQ0FBQ0E7Z0JBQ05BLENBQUNBO2dCQUVNRiw0Q0FBWUEsR0FBbkJBLFVBQW9CQSxNQUFlQTtvQkFDL0JHLENBQUNBLENBQUNBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLE1BQU1BLENBQUNBLGVBQWVBLENBQUNBLE9BQU9BLEVBQUVBLE1BQU1BLENBQUNBLENBQUNBO2dCQUMxREEsQ0FBQ0E7Z0JBeENhSCw2QkFBT0EsR0FBR0EsQ0FBQ0EsUUFBUUEsRUFBRUEsT0FBT0EsQ0FBQ0EsQ0FBQ0E7Z0JBeUNoREEsNEJBQUNBO1lBQURBLENBL0NBRCxBQStDQ0MsSUFBQUQ7WUEvQ1lBLGlDQUFxQkEsd0JBK0NqQ0EsQ0FBQUE7WUFFREEsU0FBS0EsQ0FBQ0EsVUFBVUEsQ0FBQ0EsdUJBQXVCQSxFQUFFQSxxQkFBcUJBLENBQUNBLENBQUNBO1FBQ3JFQSxDQUFDQSxFQTdFZ0JELFdBQVdBLEdBQVhBLGVBQVdBLEtBQVhBLGVBQVdBLFFBNkUzQkE7SUFBREEsQ0FBQ0EsRUE3RVlELEdBQUdBLEdBQUhBLFNBQUdBLEtBQUhBLFNBQUdBLFFBNkVmQTtBQUFEQSxDQUFDQSxFQTdFTSxLQUFLLEtBQUwsS0FBSyxRQTZFWCIsImZpbGUiOiJkcmFmdENvbmZpZy9kcmFmdENvbmZpZ0NvbnRyb2xsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUgTWFnaWMuQXBwLkRyYWZ0Q29uZmlnIHtcblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgSVRvdXJuYW1lbnRNb2RlbCB7XG4gICAgICAgIG51bVJvdW5kczogbnVtYmVyO1xuICAgICAgICBwbGF5ZXJzOiBJUGxheWVyW107XG4gICAgICAgIGZvcm1hdDogc3RyaW5nO1xuICAgICAgICBzZXQ6IHN0cmluZztcbiAgICB9XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIElQbGF5ZXIge1xuICAgICAgICBuYW1lOiBzdHJpbmc7XG4gICAgfVxuICAgIFxuICAgIGV4cG9ydCBpbnRlcmZhY2UgSVNldCB7XG4gICAgICAgIG5hbWU6IHN0cmluZztcbiAgICAgICAgdmFsdWU6IHN0cmluZztcbiAgICB9XG4gICAgXG4gICAgZXhwb3J0IGludGVyZmFjZSBJRHJhZnRDb25maWdDb250cm9sbGVyIHtcblxuICAgIH1cblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgSURyYWZ0Q29uZmlnU2NvcGUgZXh0ZW5kcyBuZy5JU2NvcGUge1xuICAgICAgICBkcmFmdENvbmZpZ0NvbnRyb2xsZXI6IElEcmFmdENvbmZpZ0NvbnRyb2xsZXI7XG4gICAgICAgIHRvdXJuYW1lbnRNb2RlbDogSVRvdXJuYW1lbnRNb2RlbDtcbiAgICB9XG5cbiAgICBleHBvcnQgY2xhc3MgRHJhZnRDb25maWdDb250cm9sbGVyIGltcGxlbWVudHMgSURyYWZ0Q29uZmlnQ29udHJvbGxlciB7XG4gICAgICAgIHByaXZhdGUgJHNjb3BlOiBJRHJhZnRDb25maWdTY29wZTtcbiAgICAgICAgcHVibGljIGZvcm1hdHM6IHN0cmluZ1tdO1xuICAgICAgICBwdWJsaWMgc2V0czogSVNldFtdO1xuICAgICAgICBwdWJsaWMgcGVuZGluZ1BsYXllck5hbWU6IHN0cmluZztcbiAgICAgICAgcHJpdmF0ZSBjdXJyZW50SWQ6IG51bWJlcjtcbiAgICAgICAgcHVibGljIHN0YXRpYyAkaW5qZWN0ID0gW1wiJHNjb3BlXCIsIFwiJGh0dHBcIl07XG4gICAgICAgIGNvbnN0cnVjdG9yKCRzY29wZTogSURyYWZ0Q29uZmlnU2NvcGUsICRodHRwOiBuZy5JSHR0cFNlcnZpY2UpIHtcbiAgICAgICAgICAgICRodHRwLmdldDxhbnk+KFwiYXBpL3BsYXllci9saXN0XCIpLnRoZW4oKHJlc3BvbnNlKSA9PiBjb25zb2xlLmxvZyhyZXNwb25zZSkpO1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUgPSAkc2NvcGU7XG4gICAgICAgICAgICB0aGlzLiRzY29wZS5kcmFmdENvbmZpZ0NvbnRyb2xsZXIgPSB0aGlzO1xuICAgICAgICAgICAgdGhpcy5zZXRzID0gW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNYWdpYzogT3JpZ2luc1wiLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogXCJvcmlcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkRyYWdvbnMgb2YgVGFya2lyXCIsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBcImR0a1wiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQmF0dGxlIGZvciBaZW5kaWthclwiLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogXCJiZnpcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1vZGVybiBNYXN0ZXJzIDIwMTVcIixcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IFwibW1iXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdO1xuICAgICAgICAgICAgdGhpcy5mb3JtYXRzID0gW1wiTElNSVRFRF9EUkFGVFwiLCBcIkxJTUlURURfVEVBTV9EUkFGVFwiLCBcIkxJTUlURURfU0VBTEVEXCIsXG4gICAgICAgICAgICBcIkxJTUlURURfVEVBTV9TRUFMRURcIiwgXCJDT05TVFJVQ1RFRF9DQVNVQUxcIiwgXCJDT05TVFJVQ1RFRF9TVEFOREFSRFwiLCBcIkNPTlNUUlVDVEVEX01PREVSTlwiLFxuICAgICAgICAgICAgXCJDT05TVFJVQ1RFRF9MRUdBQ1lcIiwgXCJDT05TVFJVQ1RFRF9WSU5UQUdFXCJdXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRJZCA9IDE7XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgYWRkUGVuZGluZ1BsYXllcigpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnBlbmRpbmdQbGF5ZXJOYW1lLnRyaW0oKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgdmFyIG5ld1BsYXllciA9IHsgbmFtZTogdGhpcy5wZW5kaW5nUGxheWVyTmFtZSwgaWQ6IHRoaXMuY3VycmVudElkIH07XG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50SWQgKz0gMTtcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS50b3VybmFtZW50TW9kZWwucGxheWVycy5wdXNoKG5ld1BsYXllcik7XG4gICAgICAgICAgICAgICAgdGhpcy5wZW5kaW5nUGxheWVyTmFtZSA9IFwiXCI7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIHJlbW92ZVBsYXllcihwbGF5ZXI6IElQbGF5ZXIpIHtcbiAgICAgICAgICAgIF8ucmVtb3ZlKHRoaXMuJHNjb3BlLnRvdXJuYW1lbnRNb2RlbC5wbGF5ZXJzLCBwbGF5ZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbWFnaWMuY29udHJvbGxlcihcImRyYWZ0Q29uZmlnQ29udHJvbGxlclwiLCBEcmFmdENvbmZpZ0NvbnRyb2xsZXIpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9