var Magic;
(function (Magic) {
    var App;
    (function (App) {
        var DraftConfig;
        (function (DraftConfig) {
            var DraftConfigController = (function () {
                function DraftConfigController($scope, $http) {
                    var _this = this;
                    this.$scope = $scope;
                    this.$scope.draftConfigController = this;
                    $http.get("api/players/list").then(function (response) {
                        console.log(response);
                        _this.$scope.allPlayers = response.data;
                    });
                    this.sets = [
                        {
                            name: "Magic: Origins",
                            value: "ori"
                        },
                        {
                            name: "Dragons of Tarkir",
                            value: "dtk"
                        },
                        {
                            name: "Battle for Zendikar",
                            value: "bfz"
                        },
                        {
                            name: "Modern Masters 2015",
                            value: "mm2"
                        }
                    ];
                    this.formats = ["LIMITED_DRAFT", "LIMITED_TEAM_DRAFT", "LIMITED_SEALED",
                        "LIMITED_TEAM_SEALED", "LIMITED_2HG_SEALED", "LIMITED_2HG_DRAFT",
                        "CONSTRUCTED_CASUAL", "CONSTRUCTED_STANDARD", "CONSTRUCTED_MODERN",
                        "CONSTRUCTED_LEGACY", "CONSTRUCTED_VINTAGE"];
                }
                DraftConfigController.prototype.addPendingPlayer = function () {
                    console.log(this.pendingPlayer);
                    if (typeof this.pendingPlayer === 'string') {
                        // if the new player is specified by the user, it will show up as a string
                        if ((this.pendingPlayer).length > 0) {
                            this.$scope.tournamentModel.players.push({
                                name: this.pendingPlayer,
                                id: -1,
                            });
                        }
                    }
                    else if (this.pendingPlayer.name.trim().length > 0) {
                        this.$scope.tournamentModel.players.push({
                            name: this.pendingPlayer.name,
                            id: this.pendingPlayer.id
                        });
                    }
                    ;
                    this.pendingPlayer = "";
                };
                DraftConfigController.prototype.removePlayer = function (player) {
                    _.remove(this.$scope.tournamentModel.players, player);
                };
                DraftConfigController.$inject = ["$scope", "$http"];
                return DraftConfigController;
            })();
            DraftConfig.DraftConfigController = DraftConfigController;
            App.magic.controller("draftConfigController", DraftConfigController);
        })(DraftConfig = App.DraftConfig || (App.DraftConfig = {}));
    })(App = Magic.App || (Magic.App = {}));
})(Magic || (Magic = {}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyYWZ0Q29uZmlnL2RyYWZ0Q29uZmlnQ29udHJvbGxlci50cyJdLCJuYW1lcyI6WyJNYWdpYyIsIk1hZ2ljLkFwcCIsIk1hZ2ljLkFwcC5EcmFmdENvbmZpZyIsIk1hZ2ljLkFwcC5EcmFmdENvbmZpZy5EcmFmdENvbmZpZ0NvbnRyb2xsZXIiLCJNYWdpYy5BcHAuRHJhZnRDb25maWcuRHJhZnRDb25maWdDb250cm9sbGVyLmNvbnN0cnVjdG9yIiwiTWFnaWMuQXBwLkRyYWZ0Q29uZmlnLkRyYWZ0Q29uZmlnQ29udHJvbGxlci5hZGRQZW5kaW5nUGxheWVyIiwiTWFnaWMuQXBwLkRyYWZ0Q29uZmlnLkRyYWZ0Q29uZmlnQ29udHJvbGxlci5yZW1vdmVQbGF5ZXIiXSwibWFwcGluZ3MiOiJBQUFBLElBQU8sS0FBSyxDQTJGWDtBQTNGRCxXQUFPLEtBQUs7SUFBQ0EsSUFBQUEsR0FBR0EsQ0EyRmZBO0lBM0ZZQSxXQUFBQSxHQUFHQTtRQUFDQyxJQUFBQSxXQUFXQSxDQTJGM0JBO1FBM0ZnQkEsV0FBQUEsV0FBV0EsRUFBQ0EsQ0FBQ0E7WUE2QjFCQztnQkFNSUMsK0JBQVlBLE1BQXlCQSxFQUFFQSxLQUFzQkE7b0JBTmpFQyxpQkEyRENBO29CQXBET0EsSUFBSUEsQ0FBQ0EsTUFBTUEsR0FBR0EsTUFBTUEsQ0FBQ0E7b0JBQ3JCQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQSxxQkFBcUJBLEdBQUdBLElBQUlBLENBQUNBO29CQUN6Q0EsS0FBS0EsQ0FBQ0EsR0FBR0EsQ0FBTUEsa0JBQWtCQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxVQUFDQSxRQUFRQTt3QkFDN0NBLE9BQU9BLENBQUNBLEdBQUdBLENBQUNBLFFBQVFBLENBQUNBLENBQUFBO3dCQUNyQkEsS0FBSUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsVUFBVUEsR0FBR0EsUUFBUUEsQ0FBQ0EsSUFBSUEsQ0FBQ0E7b0JBQzNDQSxDQUFDQSxDQUFDQSxDQUFDQTtvQkFDSEEsSUFBSUEsQ0FBQ0EsSUFBSUEs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LFNBQUdBLFFBMkZmQTtBQUFEQSxDQUFDQSxFQTNGTSxLQUFLLEtBQUwsS0FBSyxRQTJGWCIsImZpbGUiOiJkcmFmdENvbmZpZy9kcmFmdENvbmZpZ0NvbnRyb2xsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUgTWFnaWMuQXBwLkRyYWZ0Q29uZmlnIHtcblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgSVRvdXJuYW1lbnRNb2RlbCB7XG4gICAgICAgIG51bVJvdW5kczogbnVtYmVyO1xuICAgICAgICBwbGF5ZXJzOiBJUGxheWVyW107XG4gICAgICAgIGZvcm1hdDogc3RyaW5nO1xuICAgICAgICBzZXQ6IHN0cmluZztcbiAgICB9XG5cbiAgICBleHBvcnQgaW50ZXJmYWNlIElQbGF5ZXIge1xuICAgICAgICBuYW1lOiBzdHJpbmc7XG4gICAgICAgIGlkOiBudW1iZXI7XG4gICAgfVxuICAgIFxuICAgIGV4cG9ydCBpbnRlcmZhY2UgSVNldCB7XG4gICAgICAgIG5hbWU6IHN0cmluZztcbiAgICAgICAgdmFsdWU6IHN0cmluZztcbiAgICB9XG4gICAgXG4gICAgZXhwb3J0IGludGVyZmFjZSBJRHJhZnRDb25maWdDb250cm9sbGVyIHtcblxuICAgIH1cblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgSURyYWZ0Q29uZmlnU2NvcGUgZXh0ZW5kcyBuZy5JU2NvcGUge1xuICAgICAgICBkcmFmdENvbmZpZ0NvbnRyb2xsZXI6IElEcmFmdENvbmZpZ0NvbnRyb2xsZXI7XG4gICAgICAgIHRvdXJuYW1lbnRNb2RlbDogSVRvdXJuYW1lbnRNb2RlbDtcbiAgICAgICAgYWxsUGxheWVyczogSVBsYXllcltdO1xuICAgIH1cblxuICAgIGV4cG9ydCBjbGFzcyBEcmFmdENvbmZpZ0NvbnRyb2xsZXIgaW1wbGVtZW50cyBJRHJhZnRDb25maWdDb250cm9sbGVyIHtcbiAgICAgICAgcHJpdmF0ZSAkc2NvcGU6IElEcmFmdENvbmZpZ1Njb3BlO1xuICAgICAgICBwdWJsaWMgZm9ybWF0czogc3RyaW5nW107XG4gICAgICAgIHB1YmxpYyBzZXRzOiBJU2V0W107XG4gICAgICAgIHB1YmxpYyBwZW5kaW5nUGxheWVyOiBhbnk7XG4gICAgICAgIHB1YmxpYyBzdGF0aWMgJGluamVjdCA9IFtcIiRzY29wZVwiLCBcIiRodHRwXCJdO1xuICAgICAgICBjb25zdHJ1Y3Rvcigkc2NvcGU6IElEcmFmdENvbmZpZ1Njb3BlLCAkaHR0cDogbmcuSUh0dHBTZXJ2aWNlKSB7XG4gICAgICAgICAgICB0aGlzLiRzY29wZSA9ICRzY29wZTtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLmRyYWZ0Q29uZmlnQ29udHJvbGxlciA9IHRoaXM7XG4gICAgICAgICAgICAkaHR0cC5nZXQ8YW55PihcImFwaS9wbGF5ZXJzL2xpc3RcIikudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSlcbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS5hbGxQbGF5ZXJzID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5zZXRzID0gW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNYWdpYzogT3JpZ2luc1wiLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogXCJvcmlcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkRyYWdvbnMgb2YgVGFya2lyXCIsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBcImR0a1wiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQmF0dGxlIGZvciBaZW5kaWthclwiLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogXCJiZnpcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk1vZGVybiBNYXN0ZXJzIDIwMTVcIixcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IFwibW0yXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdO1xuICAgICAgICAgICAgdGhpcy5mb3JtYXRzID0gW1wiTElNSVRFRF9EUkFGVFwiLCBcIkxJTUlURURfVEVBTV9EUkFGVFwiLCBcIkxJTUlURURfU0VBTEVEXCIsXG4gICAgICAgICAgICBcIkxJTUlURURfVEVBTV9TRUFMRURcIiwgXCJMSU1JVEVEXzJIR19TRUFMRURcIiwgXCJMSU1JVEVEXzJIR19EUkFGVFwiLFxuICAgICAgICAgICAgXCJDT05TVFJVQ1RFRF9DQVNVQUxcIiwgXCJDT05TVFJVQ1RFRF9TVEFOREFSRFwiLCBcIkNPTlNUUlVDVEVEX01PREVSTlwiLFxuICAgICAgICAgICAgXCJDT05TVFJVQ1RFRF9MRUdBQ1lcIiwgXCJDT05TVFJVQ1RFRF9WSU5UQUdFXCJdXG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgYWRkUGVuZGluZ1BsYXllcigpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMucGVuZGluZ1BsYXllcik7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMucGVuZGluZ1BsYXllciA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAvLyBpZiB0aGUgbmV3IHBsYXllciBpcyBzcGVjaWZpZWQgYnkgdGhlIHVzZXIsIGl0IHdpbGwgc2hvdyB1cCBhcyBhIHN0cmluZ1xuICAgICAgICAgICAgICAgIGlmICgodGhpcy5wZW5kaW5nUGxheWVyKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLnRvdXJuYW1lbnRNb2RlbC5wbGF5ZXJzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogdGhpcy5wZW5kaW5nUGxheWVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IC0xLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucGVuZGluZ1BsYXllci5uYW1lLnRyaW0oKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUudG91cm5hbWVudE1vZGVsLnBsYXllcnMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMucGVuZGluZ1BsYXllci5uYW1lLFxuICAgICAgICAgICAgICAgICAgICBpZDogdGhpcy5wZW5kaW5nUGxheWVyLmlkXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5wZW5kaW5nUGxheWVyID0gXCJcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyByZW1vdmVQbGF5ZXIocGxheWVyOiBJUGxheWVyKSB7XG4gICAgICAgICAgICBfLnJlbW92ZSh0aGlzLiRzY29wZS50b3VybmFtZW50TW9kZWwucGxheWVycywgcGxheWVyKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG1hZ2ljLmNvbnRyb2xsZXIoXCJkcmFmdENvbmZpZ0NvbnRyb2xsZXJcIiwgRHJhZnRDb25maWdDb250cm9sbGVyKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==